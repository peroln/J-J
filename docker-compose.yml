version: '3'
services:

    #PHP Service
    app:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                user: oleh
                uid: 1000
        image: teddi/php
        container_name: app
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
#        command: >-
#            sh -c "
#              apt-get update && sudo apt-get install php-xdebug && composer install ;\
#              cp php.ini-development /etc/php82/php.ini ;\
#              cp xdebug.ini /etc/php82/conf.d/50_xdebug.ini ;\
#              php artisan migrate"
        depends_on:
            - db
        volumes:
            - ./:/var/www
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network

    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./nginx/conf.d/:/etc/nginx/conf.d/
            - ./nginx-logs:/var/log/nginx
           - /etc/letsencrypt/live/grasscutting.irish/fullchain.pem:/etc/nginx/ssl/fullchain.pem
           - /etc/letsencrypt/live/grasscutting.irish/privkey.pem:/etc/nginx/ssl/privkey.pem

        networks:
            - app-network

    #MySQL Service
    db:
        image: mysql:5.7.22
        container_name: db
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbdata:/var/lib/mysql
            - ./mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app-network
            - bd-network
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: pma
        networks:
            - bd-network
        depends_on:
            - db
        environment:
            PMA_HOST: db
            PMA_PORT: ${DB_PORT}
            PMA_ARBITRARY: 1
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        restart: always
        ports:
            - 8081:80
#Docker Networks
networks:
    app-network:
        driver: bridge
    bd-network:
        driver: bridge

#Volumes
volumes:
    dbdata:
        driver: local
